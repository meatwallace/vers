{
  "name": "@vers/source",
  "version": "0.0.0",
  "author": "Geoff Whatley <me@geoffwhatley.com> (http://github.com/meatwallace)",
  "license": "AGPL-3.0",
  "private": true,
  "type": "module",
  "scripts": {
    "clean": "./scripts/clean.sh",
    "build": "nx run-many -t build",
    "lint": "tsx --tsconfig ./scripts/tsconfig.json ./scripts/lint.ts",
    "test": "vitest",
    "typecheck": "nx run-many -t typecheck",
    "e2e": "nx run-many -t e2e",
    "format": "tsx --tsconfig ./scripts/tsconfig.json ./scripts/format.ts",
    "codegen:graphql": "TS_NODE_PROJECT=./tsconfig.codegen.json dotenvx run -f projects/service-api/.env.development -- graphql-codegen --require tsconfig-paths/register --import jiti/register",
    "codegen:styles": "nx run-many -t codegen",
    "codegen:types": "nx run-many -t typegen",
    "codegen:paths": "tsx --tsconfig ./scripts/tsconfig.json ./scripts/generate-typescript-paths.ts",
    "pg:migrations-update": "drizzle-kit up --config=projects/db-postgres/drizzle.config.ts",
    "pg:migrations-generate": "drizzle-kit generate --config=projects/db-postgres/drizzle.config.ts",
    "pg:migrations-run": "cd projects/db-postgres && dotenvx run -f .env.development -- yarn tsx migrate.ts",
    "pg:reset-dev": "tsx --tsconfig ./scripts/tsconfig.json ./scripts/pg-reset-dev-db.ts",
    "pg:test-container:start": "tsx --tsconfig ./scripts/tsconfig.json ./scripts/pg-test-container-start.ts",
    "pg:test-container:stop": "tsx --tsconfig ./scripts/tsconfig.json ./scripts/pg-test-container-stop.ts",
    "ladle:dev": "cd projects/lib-design-system && yarn ladle dev",
    "stack": "tsx --tsconfig ./scripts/tsconfig.json ./scripts/stack-cli.ts",
    "---PROJECT-SPECIFIC": "",
    "build:app-web": "yarn workspace app-web react-router build",
    "build:db-mongo": "nx build db-mongo",
    "build:db-postgres": "nx build db-postgres",
    "build:service-api": "nx build service-api",
    "build:service-avatar": "nx build service-avatar",
    "build:service-email": "nx build service-email",
    "build:service-session": "nx build service-session",
    "build:service-user": "nx build service-user",
    "build:service-verification": "nx build service-verification",
    "deploy:app-web": "flyctl deploy --local-only --dockerfile projects/app-web/Dockerfile --config projects/app-web/fly.toml",
    "deploy:db-mongo": "flyctl deploy --local-only --dockerfile projects/db-mongo/Dockerfile --config projects/db-mongo/fly.toml",
    "deploy:db-postgres": "flyctl deploy --local-only --dockerfile projects/db-postgres/Dockerfile --config projects/db-postgres/fly.toml",
    "deploy:service-api": "flyctl deploy --local-only --dockerfile projects/service-api/Dockerfile --config projects/service-api/fly.toml",
    "deploy:service-avatar": "flyctl deploy --local-only --dockerfile projects/service-avatar/Dockerfile --config projects/service-avatar/fly.toml",
    "deploy:service-email": "flyctl deploy --local-only --dockerfile projects/service-email/Dockerfile --config projects/service-email/fly.toml",
    "deploy:service-session": "flyctl deploy --local-only --dockerfile projects/service-session/Dockerfile --config projects/service-session/fly.toml",
    "deploy:service-user": "flyctl deploy --local-only --dockerfile projects/service-user/Dockerfile --config projects/service-user/fly.toml",
    "deploy:service-verification": "flyctl deploy --local-only --dockerfile projects/service-verification/Dockerfile --config projects/service-verification/fly.toml",
    "dev:app-web": "cd projects/app-web && react-router dev --config=vite.config.ts",
    "dev:service-api": "yarn stack stop service-api && dotenvx run -f projects/service-api/.env.development -- yarn run nx serve service-api",
    "dev:service-email": "yarn stack stop service-email && dotenvx run -f projects/service-email/.env.development.local -f projects/service-email/.env.development -- yarn run nx serve service-email",
    "dev:service-session": "yarn stack stop service-session && dotenvx run -f projects/service-session/.env.development -- yarn run nx serve service-session",
    "dev:service-user": "yarn stack stop service-user && dotenvx run -f projects/service-user/.env.development -- yarn run nx serve service-user",
    "dev:service-verification": "yarn stack stop service-verification && dotenvx run -f projects/service-verification/.env.development -- yarn run nx serve service-verification",
    "dev:service-avatar": "yarn stack stop service-avatar && dotenvx run -f projects/service-avatar/.env.development -- yarn run nx serve service-avatar",
    "e2e:app-web": "cd projects/app-web-e2e && yarn playwright test",
    "serve:app-web": "dotenvx run -f projects/app-web/.env.development.local -- node ./projects/app-web/server.mjs",
    "test:app-web": "vitest --project app-web",
    "test:lib-aether-client": "vitest --project lib-aether-client",
    "test:lib-aether-core": "vitest --project lib-aether-core",
    "test:lib-client-test-utils": "vitest --project lib-client-test-utils",
    "test:lib-design-system": "vitest --project lib-design-system",
    "test:lib-email-templates": "vitest --project lib-email-templates",
    "test:lib-idle-client": "vitest --project lib-idle-client",
    "test:lib-idle-core": "vitest --project lib-idle-core",
    "test:lib-postgres-schema": "vitest --project lib-postgres-schema",
    "test:lib-validation": "vitest --project lib-validation",
    "test:lib-service-test-utils": "vitest --project lib-service-test-utils",
    "test:lib-service-utils": "vitest --project lib-service-utils",
    "test:service-api": "vitest --project service-api",
    "test:service-avatar": "vitest --project service-avatar",
    "test:service-email": "vitest --project service-email",
    "test:service-session": "vitest --project service-session",
    "test:service-user": "vitest --project service-user",
    "test:service-verification": "vitest --project service-verification",
    "typecheck:app-web": "tsc --noEmit --project projects/app-web/tsconfig.json",
    "typecheck:db-mongo": "tsc --noEmit --project projects/db-mongo/tsconfig.json",
    "typecheck:db-postgres": "tsc --noEmit --project projects/db-postgres/tsconfig.json",
    "typecheck:lib-aether-client": "tsc --noEmit --project projects/lib-aether-client/tsconfig.json",
    "typecheck:lib-aether-core": "tsc --noEmit --project projects/lib-aether-core/tsconfig.json",
    "typecheck:lib-client-test-utils": "tsc --noEmit --project projects/lib-client-test-utils/tsconfig.json",
    "typecheck:lib-design-system": "tsc --noEmit --project projects/lib-design-system/tsconfig.json",
    "typecheck:lib-email-templates": "tsc --noEmit --project projects/lib-email-templates/tsconfig.json",
    "typecheck:lib-idle-client": "tsc --noEmit --project projects/lib-idle-client/tsconfig.json",
    "typecheck:lib-idle-core": "tsc --noEmit --project projects/lib-idle-core/tsconfig.json",
    "typecheck:lib-postgres-schema": "tsc --noEmit --project projects/lib-postgres-schema/tsconfig.json",
    "typecheck:lib-validation": "tsc --noEmit --project projects/lib-validation/tsconfig.json",
    "typecheck:lib-service-test-utils": "tsc --noEmit --project projects/lib-service-test-utils/tsconfig.json",
    "typecheck:lib-service-utils": "tsc --noEmit --project projects/lib-service-utils/tsconfig.json",
    "typecheck:service-api": "tsc --noEmit --project projects/service-api/tsconfig.json",
    "typecheck:service-avatar": "tsc --noEmit --project projects/service-avatar/tsconfig.json",
    "typecheck:service-email": "tsc --noEmit --project projects/service-email/tsconfig.json",
    "typecheck:service-session": "tsc --noEmit --project projects/service-session/tsconfig.json",
    "typecheck:service-user": "tsc --noEmit --project projects/service-user/tsconfig.json",
    "typecheck:service-verification": "tsc --noEmit --project projects/service-verification/tsconfig.json",
    "---UTILITY": "",
    "postinstall": "husky"
  },
  "devDependencies": {
    "@0no-co/graphqlsp": "1.12.16",
    "@commander-js/extra-typings": "13.1.0",
    "@commitlint/cli": "19.8.0",
    "@dotenvx/dotenvx": "1.38.4",
    "@eslint/eslintrc": "3.3.0",
    "@eslint/js": "9.22.0",
    "@graphql-codegen/cli": "5.0.5",
    "@graphql-codegen/client-preset": "4.7.0",
    "@graphql-codegen/schema-ast": "4.1.0",
    "@graphql-tools/executor-http": "1.2.8",
    "@graphql-typed-document-node/core": "3.2.0",
    "@ladle/react": "5.0.1",
    "@mswjs/data": "0.16.2",
    "@nx/devkit": "20.6.2",
    "@nx/esbuild": "20.6.2",
    "@nx/js": "20.6.2",
    "@nx/vite": "20.6.2",
    "@nx/workspace": "20.6.2",
    "@pandacss/dev": "0.53.1",
    "@parcel/watcher": "2.5.1",
    "@playwright/test": "1.51.0",
    "@react-router/dev": "7.3.0",
    "@react-three/test-renderer": "9.0.1",
    "@sentry/esbuild-plugin": "3.2.2",
    "@sentry/vite-plugin": "3.2.2",
    "@swc-node/register": "1.10.9",
    "@swc/cli": "0.6.0",
    "@swc/core": "1.11.8",
    "@swc/helpers": "0.5.15",
    "@testcontainers/postgresql": "10.18.0",
    "@testing-library/dom": "10.4.0",
    "@testing-library/jest-dom": "6.6.3",
    "@testing-library/react": "16.2.0",
    "@testing-library/user-event": "14.6.1",
    "@types/bcryptjs": "2.4.6",
    "@types/eslint-config-prettier": "6.11.3",
    "@types/eslint-plugin-jsx-a11y": "6.10.0",
    "@types/node": "22.13.10",
    "@types/qrcode": "1.5.5",
    "@types/react": "19.0.12",
    "@types/react-dom": "19.0.4",
    "@types/source-map-support": "0.5.10",
    "@types/three": "0.175.0",
    "@typescript-eslint/eslint-plugin": "8.26.1",
    "@typescript-eslint/parser": "8.26.1",
    "@typescript-eslint/utils": "8.26.1",
    "@vafanassieff/msw-trpc": "2.0.0-beta.7",
    "@vitejs/plugin-react": "4.3.4",
    "@vitest/coverage-v8": "3.0.8",
    "@vitest/expect": "3.0.8",
    "@vitest/ui": "3.0.8",
    "@vitest/web-worker": "3.0.9",
    "autoprefixer": "10.4.21",
    "drizzle-kit": "0.30.5",
    "esbuild": "0.25.1",
    "eslint": "9.22.0",
    "eslint-config-prettier": "10.1.1",
    "eslint-plugin-drizzle": "0.2.3",
    "eslint-plugin-jsx-a11y": "6.10.2",
    "eslint-plugin-perfectionist": "4.10.1",
    "eslint-plugin-playwright": "2.2.0",
    "eslint-plugin-react": "7.37.4",
    "eslint-plugin-react-hooks": "5.2.0",
    "eslint-plugin-unicorn": "57.0.0",
    "eslint-plugin-vitest": "0.5.4",
    "graphql-transform-scalars": "2.1.1",
    "happy-dom": "17.4.3",
    "husky": "9.1.7",
    "jest-extended": "4.0.2",
    "jiti": "2.4.2",
    "jwt-decode": "4.0.0",
    "lint-staged": "15.4.3",
    "msw": "2.7.3",
    "msw-trpc": "2.0.0-beta.1",
    "nx": "20.6.2",
    "playwright": "1.51.0",
    "postcss": "8.5.3",
    "prettier": "3.5.3",
    "tsconfig-paths": "4.2.0",
    "tslib": "2.8.1",
    "tsx": "4.19.3",
    "type-fest": "4.37.0",
    "typescript": "5.8.2",
    "typescript-eslint": "8.26.1",
    "vite": "6.2.2",
    "vite-tsconfig-paths": "5.1.4",
    "vitest": "3.0.8"
  },
  "dependencies": {
    "@base-ui-components/react": "1.0.0-alpha.6",
    "@conform-to/react": "1.2.2",
    "@conform-to/zod": "1.2.2",
    "@epic-web/totp": "4.0.1",
    "@graphql-tools/utils": "10.8.4",
    "@hono/node-server": "1.13.8",
    "@hono/sentry": "1.2.0",
    "@hono/trpc-server": "0.3.4",
    "@isaacs/ttlcache": "1.4.1",
    "@paralleldrive/cuid2": "2.2.2",
    "@pothos/core": "4.5.0",
    "@pothos/plugin-directives": "4.2.0",
    "@react-email/components": "0.0.33",
    "@react-hookz/web": "25.1.0",
    "@react-router/node": "7.3.0",
    "@react-router/serve": "7.3.0",
    "@react-spring/three": "9.7.5",
    "@react-three/a11y": "3.0.0",
    "@react-three/drei": "10.0.5",
    "@react-three/fiber": "9.1.0",
    "@sentry/node": "9.5.0",
    "@sentry/profiling-node": "9.5.0",
    "@sentry/react": "9.5.0",
    "@trpc/client": "11.0.0-rc.824",
    "@trpc/server": "11.0.0-rc.824",
    "@urql/core": "5.1.1",
    "@urql/exchange-auth": "2.2.1",
    "bcryptjs": "3.0.2",
    "commander": "13.1.0",
    "date-fns": "4.1.0",
    "diskusage": "1.2.0",
    "drizzle-orm": "0.40.0",
    "execa": "9.5.2",
    "fast-equals": "5.2.2",
    "graphql": "16.10.0",
    "graphql-rate-limit-directive": "2.0.6",
    "graphql-request": "7.1.2",
    "graphql-scalars": "1.24.1",
    "graphql-yoga": "5.13.1",
    "hono": "4.7.4",
    "hono-rate-limiter": "0.4.2",
    "immer": "10.1.1",
    "input-otp": "1.4.2",
    "isbot": "5.1.23",
    "jose": "6.0.8",
    "memoize-one": "6.0.0",
    "ora": "8.2.0",
    "pino": "9.6.0",
    "pino-pretty": "13.0.0",
    "pino-sentry-transport": "1.5.0",
    "postgres": "3.4.5",
    "pretty-bytes": "6.1.1",
    "pure-rand": "7.0.1",
    "qrcode": "1.5.4",
    "rate-limiter-flexible": "5.0.5",
    "react": "19.0.0",
    "react-dom": "19.0.0",
    "react-icons": "5.5.0",
    "react-router": "7.3.0",
    "react-router-hono-server": "2.11.0",
    "react-spring": "9.7.5",
    "remix-hono": "0.0.18",
    "remix-utils": "8.2.0",
    "resend": "4.1.2",
    "source-map-support": "0.5.21",
    "spin-delay": "2.0.1",
    "superjson": "2.2.2",
    "three": "0.175.0",
    "tiny-invariant": "1.3.3",
    "xxhash-wasm": "1.1.0",
    "zod": "3.24.2",
    "zustand": "5.0.3"
  },
  "packageManager": "yarn@4.6.0",
  "workspaces": [
    "projects/*"
  ],
  "resolutions": {
    "msw@npm:^1.2.2": "2.2.14",
    "three": "0.174.0"
  }
}
