---
description: GraphQL Mutation Implementation Standards using Pothos
globs: "**/schema/mutations/**/*.ts"
alwaysApply: false
---
# GraphQL Mutation Implementation Standards

Example code: [login-with-password.ts](mdc:projects/service-api/src/schema/mutations/login-with-password.ts)

## Input Types

* All mutations must have an input type, even for simple operations
* Name input types as `OperationNameInput` (e.g. `CreateUserInput`)

## Payload Types

* All mutations must return a union type
* Name payload types as `OperationNamePayload` (e.g. `CreateUserPayload`)
* Union must include `MutationErrorPayload`
* Use `createPayloadResolver` utility for union type resolution

## Resolver Implementation

* Export standalone async resolver function
* Export wrapped resolver function
* Accept standard resolver parameters (`parent`, `args`, `ctx`)
* Use service layer methods from `ctx.services`
* Return standardized success/error shape for expected errors
* Never expose raw error messages in responses

## Documentation

* Include JSDoc documentation for mutations
* Include usage example in documentation